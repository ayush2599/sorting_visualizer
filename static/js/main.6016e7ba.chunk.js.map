{"version":3,"sources":["logo.svg","SortingAlgorithms/heapSort.js","SortingAlgorithms/bubbleSort.js","SortingAlgorithms/insertionSort.js","SortingAlgorithms/mergeSort.js","SortingAlgorithms/quickSort.js","SortingAlgorithms/selectionSort.js","SortingVisualizer/SortingVisualizer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","len_aux","getbubbleSortAnimations","array","animations","auxiliaryArray","n","length","i","j","push","swap","bubbleSort","slice","firstIndex","secondIndex","temp","getinsertionSortAnimations","auxillaryArray","console","log","insertionSort","getMergeSortAnimations","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","doMerge","getquickSortAnimations","quickSort","startIndex","endIndex","pivotIndex","pivot","partitionArray","getHeapSortAnimations","heapRoot","heapSort","left","right","max","index1","index2","getselectionSortAnimations","minIndex","selectionSort","ENABLED_BUTTON","window","innerWidth","innerHeight","SortingVisualizer","props","state","this","resetArray","randomIntFromInterval","setState","document","getElementById","disabled","buttonStyle","style","title","cursor","background","arrayBars","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","color","setTimeout","backgroundColor","newHeight","height","isColorChange","barOneIndex","barTwoIndex","barIndex","barStyle","className","display","justifyContents","position","onClick","id","mergeSort","href","icon","faGlobe","faLinkedin","faInstagram","faGithub","map","value","idx","key","min","random","React","Component","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6016e7ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export function getHeapSortAnimations(array) {\r\n  const animations = [];\r\n  const auxiliaryArray = array.slice();\r\n  heapSort(animations, auxiliaryArray);\r\n  return animations;\r\n}\r\nlet len_aux;\r\nfunction heapSort(animations, auxiliaryArray) {\r\n  console.log(\"before\");\r\n\r\n  console.log(auxiliaryArray);\r\n\r\n  len_aux = auxiliaryArray.length;\r\n  for (let i = Math.floor(auxiliaryArray.length / 2); i >= 0; i -= 1) {\r\n    heapRoot(animations, auxiliaryArray, i);\r\n  }\r\n  for (let i = len_aux - 1; i > 0; i -= 1) {\r\n    swap(animations, auxiliaryArray, 0, i);\r\n    len_aux--;\r\n    heapRoot(animations, auxiliaryArray, 0);\r\n  }\r\n  console.log(\"done\");\r\n  console.log(\"after\");\r\n  console.log(auxiliaryArray);\r\n}\r\n\r\nfunction heapRoot(animations, auxiliaryArray, i) {\r\n  let left = 2 * i + 1;\r\n  let right = 2 * i + 2;\r\n  let max = i;\r\n  // if (left < 100 && right < 100) {\r\n  animations.push([\"comparision1\", right, left]);\r\n  animations.push([\"comparision2\", right, left]);\r\n\r\n  if (left < len_aux && auxiliaryArray[left] > auxiliaryArray[max]) {\r\n    max = left;\r\n  }\r\n  if (right < len_aux && auxiliaryArray[right] > auxiliaryArray[max]) {\r\n    max = right;\r\n  }\r\n  if (max !== i) {\r\n    swap(animations, auxiliaryArray, i, max);\r\n    heapRoot(animations, auxiliaryArray, max);\r\n  }\r\n}\r\n\r\nfunction swap(animations, auxiliaryArray, index1, index2) {\r\n  animations.push([\"swap\", index1, auxiliaryArray[index2]]);\r\n  animations.push([\"swap\", index2, auxiliaryArray[index1]]);\r\n  let temp = auxiliaryArray[index1];\r\n  auxiliaryArray[index1] = auxiliaryArray[index2];\r\n  auxiliaryArray[index2] = temp;\r\n}\r\n","export function getbubbleSortAnimations(array) {\r\n  const animations = [];\r\n  const auxiliaryArray = array.slice();\r\n  bubbleSort(auxiliaryArray, animations);\r\n  return animations;\r\n}\r\n\r\nfunction bubbleSort(auxiliaryArray, animations) {\r\n  const n = auxiliaryArray.length;\r\n  for (let i = 0; i < n; i++) {\r\n    for (let j = 0; j < n - i - 1; j++) {\r\n      //these values that we are comparing\r\n      //we push them once to change the colour\r\n      animations.push([j, j + 1]);\r\n      //these are the values that we are comparing\r\n      //we push them second time to revert their colour\r\n      animations.push([j, j + 1]);\r\n      if (auxiliaryArray[j] > auxiliaryArray[j + 1]) {\r\n        //we overwrite the value at index j in original array\r\n        //with value in auxiliary array at j+1\r\n        animations.push([j, auxiliaryArray[j + 1]]);\r\n        //we overwrite the value at index j+1 in original array\r\n        //with value in auxiliary array at j\r\n        animations.push([j + 1, auxiliaryArray[j]]);\r\n        swap(auxiliaryArray, j, j + 1);\r\n      } else {\r\n        animations.push([-1, -1]);\r\n        animations.push([-1, -1]);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction swap(auxiliaryArray, firstIndex, secondIndex) {\r\n  let temp = auxiliaryArray[firstIndex];\r\n  auxiliaryArray[firstIndex] = auxiliaryArray[secondIndex];\r\n  auxiliaryArray[secondIndex] = temp;\r\n}\r\n","export function getinsertionSortAnimations(array) {\r\n  const animations = [];\r\n  const auxiliaryArray = array.slice();\r\n  insertionSort(auxiliaryArray, animations);\r\n\r\n  return animations;\r\n}\r\n\r\nfunction insertionSort(auxillaryArray, animations) {\r\n  const n = auxillaryArray.length;\r\n  for (let i = 1; i < n; i++) {\r\n    let temp = auxillaryArray[i];\r\n    let j = i - 1;\r\n    //these values that are we are comparing;\r\n    //we push them once to change the colour\r\n    animations.push([\"comparision1\", j, i]);\r\n    //these are the values that we are comparing\r\n    //we push them second time to revert their colour\r\n    animations.push([\"comparision2\", j, i]);\r\n    while (j >= 0 && auxillaryArray[j] > temp) {\r\n      //we overwrite the value in index j+1 in original array\r\n      animations.push([\"overwrite\", j + 1, auxillaryArray[j]]);\r\n      auxillaryArray[j + 1] = auxillaryArray[j];\r\n      j = j - 1;\r\n      if (j >= 0) {\r\n        //this is not for comparing, we push to change the colour\r\n        animations.push([\"comparision1\", j, i]);\r\n        //this is not for comparing, we push to revert colour\r\n        animations.push([\"comparision2\", j, i]);\r\n      }\r\n    }\r\n    //we overwrite the value at index j+1\r\n    animations.push([\"overwrite\", j + 1, temp]);\r\n    auxillaryArray[j + 1] = temp;\r\n  }\r\n  console.log(auxillaryArray);\r\n}\r\n","export function getMergeSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length <= 1) {\r\n    return array;\r\n  }\r\n  const auxiliaryArray = array.slice();\r\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n  return animations;\r\n}\r\n\r\nfunction mergeSortHelper(\r\n  mainArray,\r\n  startIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations\r\n) {\r\n  if (startIdx === endIdx) {\r\n    return;\r\n  }\r\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n  mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\r\n  mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\r\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n}\r\n\r\nfunction doMerge(\r\n  mainArray,\r\n  startIdx,\r\n  middleIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations\r\n) {\r\n  let k = startIdx;\r\n  let i = startIdx;\r\n  let j = middleIdx + 1;\r\n  while (i <= middleIdx && j <= endIdx) {\r\n    //these values that are we are comparing;\r\n    //we push them once to change the colour\r\n    animations.push([i, j]);\r\n    //these are the values that we are comparing\r\n    //we push them second time to revert their colour\r\n    animations.push([i, j]);\r\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n      //we overwrite the value at index k in original array\r\n      // with value at index i in the auxilliary array\r\n      animations.push([k, auxiliaryArray[i]]);\r\n      mainArray[k++] = auxiliaryArray[i++];\r\n    } else {\r\n      // We overwrite the value at index k in the original array with the\r\n      // value at index j in the auxiliary array.\r\n      animations.push([k, auxiliaryArray[j]]);\r\n      mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n  }\r\n  while (i <= middleIdx) {\r\n    //these are values aren't for comparing we push to change the color\r\n    animations.push([i, i]);\r\n    //these are values aren't for comparing we push to revert color\r\n    animations.push([i, i]);\r\n    //we overwrte the value at index k\r\n    //with the value at i in the auxilliary array\r\n    animations.push([k, auxiliaryArray[i]]);\r\n    mainArray[k++] = auxiliaryArray[i++];\r\n  }\r\n  while (j <= endIdx) {\r\n    //these are values aren't for comparing we push to change the color\r\n    animations.push([j, j]);\r\n    //these are values aren't for comparing we push to revert color\r\n    animations.push([j, j]);\r\n    //we overwrte the value at index k\r\n    //with the value at i in the auxilliary array\r\n    animations.push([k, auxiliaryArray[j]]);\r\n    mainArray[k++] = auxiliaryArray[j++];\r\n  }\r\n}\r\n","export function getquickSortAnimations(array) {\r\n  const animations = [];\r\n  const auxillaryArray = array.slice();\r\n  quickSort(auxillaryArray, 0, auxillaryArray.length - 1, animations);\r\n  return animations;\r\n}\r\n\r\nfunction quickSort(auxillaryArray, startIndex, endIndex, animations) {\r\n  let pivotIndex;\r\n  if (startIndex < endIndex) {\r\n    pivotIndex = partitionArray(\r\n      auxillaryArray,\r\n      startIndex,\r\n      endIndex,\r\n      animations\r\n    );\r\n    quickSort(auxillaryArray, startIndex, pivotIndex - 1, animations);\r\n    quickSort(auxillaryArray, pivotIndex + 1, endIndex, animations);\r\n  }\r\n}\r\n\r\nfunction partitionArray(auxillaryArray, startIndex, endIndex, animations) {\r\n  let pivot = auxillaryArray[endIndex];\r\n  let pivotIndex = startIndex;\r\n  for (let i = startIndex; i <= endIndex - 1; i++) {\r\n    animations.push([i, endIndex]);\r\n    animations.push([i, endIndex]);\r\n    if (auxillaryArray[i] <= pivot) {\r\n      //Swap these two heights\r\n      animations.push([i, auxillaryArray[pivotIndex]]);\r\n      animations.push([pivotIndex, auxillaryArray[i]]);\r\n      swap(auxillaryArray, i, pivotIndex);\r\n      pivotIndex++;\r\n    } else {\r\n      animations.push([-1, -1]);\r\n      animations.push([-1, -1]);\r\n    }\r\n    animations.push([-1, -1]);\r\n    animations.push([-1, -1]);\r\n  }\r\n  animations.push([-1, -1]);\r\n  animations.push([-1, -1]);\r\n  animations.push([-1, -1]);\r\n  animations.push([-1, -1]);\r\n  //Swap these two heights\r\n  animations.push([pivotIndex, auxillaryArray[endIndex]]);\r\n  animations.push([endIndex, auxillaryArray[pivotIndex]]);\r\n  swap(auxillaryArray, pivotIndex, endIndex);\r\n  return pivotIndex;\r\n}\r\n\r\nfunction swap(auxillaryArray, firstIndex, secondIndex) {\r\n  let temp = auxillaryArray[firstIndex];\r\n  auxillaryArray[firstIndex] = auxillaryArray[secondIndex];\r\n  auxillaryArray[secondIndex] = temp;\r\n}\r\n","export function getselectionSortAnimations(array) {\r\n  const animations = [];\r\n  const auxillaryArray = array.slice();\r\n  selectionSort(auxillaryArray, animations);\r\n  return animations;\r\n}\r\n\r\nfunction selectionSort(auxillaryArray, animations) {\r\n  for (let i = 0; i < auxillaryArray.length - 1; i++) {\r\n    let minIndex = i; //Finding minimum element in unsorted array\r\n    for (let j = i + 1; j < auxillaryArray.length; j++) {\r\n      animations.push([\"comparision1\", j, minIndex]);\r\n      animations.push([\"comparision2\", j, minIndex]);\r\n      if (auxillaryArray[j] < auxillaryArray[minIndex]) {\r\n        minIndex = j;\r\n      }\r\n    }\r\n    animations.push([\"swap\", minIndex, auxillaryArray[i]]);\r\n    animations.push([\"swap\", i, auxillaryArray[minIndex]]);\r\n    // Swap the found minimum element with the first element\r\n    swap(auxillaryArray, minIndex, i);\r\n  }\r\n}\r\n\r\nfunction swap(auxillaryArray, firstIndex, secondIndex) {\r\n  let temp = auxillaryArray[firstIndex];\r\n  auxillaryArray[firstIndex] = auxillaryArray[secondIndex];\r\n  auxillaryArray[secondIndex] = temp;\r\n}\r\n","import React from \"react\";\r\nimport \"./SortingVisualizer.css\";\r\n\r\nimport { getbubbleSortAnimations } from \"../SortingAlgorithms/bubbleSort\";\r\nimport { getinsertionSortAnimations } from \"../SortingAlgorithms/insertionSort\";\r\nimport { getMergeSortAnimations } from \"../SortingAlgorithms/mergeSort\";\r\nimport { getquickSortAnimations } from \"../SortingAlgorithms/quickSort\";\r\nimport { getHeapSortAnimations } from \"../SortingAlgorithms/heapSort\";\r\nimport { getselectionSortAnimations } from \"../SortingAlgorithms/selectionSort\";\r\n\r\nimport { faGlobe } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  faInstagram,\r\n  faLinkedin,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nlet WINDOW_WIDTH = window.innerWidth;\r\nlet WINDOW_HEIGHT = window.innerHeight;\r\nconst ANIMATION_SPEED_MS = 1;\r\nconst NUMBER_OF_ARRAY_BARS = 100;\r\nconst PRIMARY_COLOR = \"turquoise\";\r\nconst SECONDARY_COLOR = \"red\";\r\nconst SORTED_COLOR = \"green\";\r\nconst UNTOUCHED_COLOR = \"black\";\r\n\r\nconst DISABLED_BUTTON = \"Currently Disabled\";\r\nconst ENABLED_BUTTON = {\r\n  nlogn: \"O(NlogN) Time Complexity\",\r\n  nSquare: \"O(N^2) Time Complexity\",\r\n};\r\n\r\nclass SortingVisualizer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      array: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n  }\r\n\r\n  resetArray() {\r\n    const array = [];\r\n    for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\r\n      array.push(this.randomIntFromInterval(5, 500));\r\n    }\r\n    this.setState({ array });\r\n  }\r\n\r\n  disableSortButtons() {\r\n    document.getElementById(\"mergeSort\").disabled = true;\r\n    let buttonStyle = document.getElementById(\"mergeSort\").style;\r\n    document.getElementById(\"mergeSort\").title = DISABLED_BUTTON;\r\n    buttonStyle.cursor = \"default\";\r\n    buttonStyle.background = \"#000000\";\r\n\r\n    document.getElementById(\"quickSort\").disabled = true;\r\n    buttonStyle = document.getElementById(\"quickSort\").style;\r\n    document.getElementById(\"quickSort\").title = DISABLED_BUTTON;\r\n    buttonStyle.cursor = \"default\";\r\n    buttonStyle.background = \"#000000\";\r\n\r\n    document.getElementById(\"insertionSort\").disabled = true;\r\n    buttonStyle = document.getElementById(\"insertionSort\").style;\r\n    document.getElementById(\"insertionSort\").title = DISABLED_BUTTON;\r\n    buttonStyle.cursor = \"default\";\r\n    buttonStyle.background = \"#000000\";\r\n\r\n    document.getElementById(\"bubbleSort\").disabled = true;\r\n    buttonStyle = document.getElementById(\"bubbleSort\").style;\r\n    document.getElementById(\"bubbleSort\").title = DISABLED_BUTTON;\r\n    buttonStyle.cursor = \"default\";\r\n    buttonStyle.background = \"#000000\";\r\n  }\r\n  restoreStoreButtons() {\r\n    document.getElementById(\"mergeSort\").disabled = false;\r\n    let buttonStyle = document.getElementById(\"mergeSort\").style;\r\n    document.getElementById(\"mergeSort\").title = ENABLED_BUTTON.nlogn;\r\n    /*buttonStyle.background = \"#14E014\";*/\r\n    buttonStyle.background = \"#F84949\";\r\n    buttonStyle.cursor = \"pointer\";\r\n\r\n    document.getElementById(\"quickSort\").disabled = false;\r\n    buttonStyle = document.getElementById(\"quickSort\").style;\r\n    document.getElementById(\"quickSort\").title = ENABLED_BUTTON.nSquare;\r\n    /*buttonStyle.background = \"#14E014\";*/\r\n    buttonStyle.background = \"#F84949\";\r\n    buttonStyle.cursor = \"pointer\";\r\n\r\n    document.getElementById(\"bubbleSort\").disabled = false;\r\n    buttonStyle = document.getElementById(\"bubbleSort\").style;\r\n    document.getElementById(\"bubbleSort\").title = ENABLED_BUTTON.nSquare;\r\n    /*buttonStyle.background = \"#14E014\";*/\r\n    buttonStyle.background = \"#F84949\";\r\n    buttonStyle.cursor = \"pointer\";\r\n\r\n    document.getElementById(\"insertionSort\").disabled = false;\r\n    buttonStyle = document.getElementById(\"insertionSort\").style;\r\n    document.getElementById(\"insertionSort\").title = ENABLED_BUTTON.nSquare;\r\n    /*buttonStyle.background = \"#14E014\";*/\r\n    buttonStyle.background = \"#F84949\";\r\n    buttonStyle.cursor = \"pointer\";\r\n    /*buttonStyle.hover.backgroundColor = \"#000\";*/\r\n  }\r\n\r\n  mergeSort() {\r\n    const animations = getMergeSortAnimations(this.state.array);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      }\r\n    }\r\n  }\r\n\r\n  bubbleSort() {\r\n    const animations = getbubbleSortAnimations(this.state.array);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const isColorChange = i % 4 === 0 || i % 4 === 1;\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      if (isColorChange) {\r\n        const color = i % 4 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        const [barOneIndex, barTwoIndex] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIndex].style;\r\n        const barTwoStyle = arrayBars[barTwoIndex].style;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else {\r\n        const [barIndex, newHeight] = animations[i];\r\n        if (barIndex === -1) {\r\n          continue;\r\n        }\r\n        const barStyle = arrayBars[barIndex].style;\r\n        setTimeout(() => {\r\n          barStyle.height = `${newHeight}px`;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      }\r\n    }\r\n  }\r\n\r\n  quickSort() {\r\n    const animations = getquickSortAnimations(this.state.array);\r\n    for (let i = 0; i < animations.length - 1; i++) {\r\n      const isColorChange = i % 6 === 0 || i % 6 === 1;\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      if (isColorChange === true) {\r\n        const color = i % 6 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        const [barOneIndex, barTwoIndex] = animations[i];\r\n        if (barOneIndex === -1) {\r\n          continue;\r\n        }\r\n        const barOneStyle = arrayBars[barOneIndex].style;\r\n        const barTwoStyle = arrayBars[barTwoIndex].style;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else {\r\n        const [barIndex, newHeight] = animations[i];\r\n        if (barIndex === -1) {\r\n          continue;\r\n        }\r\n        const barStyle = arrayBars[barIndex].style;\r\n        setTimeout(() => {\r\n          barStyle.height = `${newHeight}px`;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      }\r\n    }\r\n  }\r\n\r\n  insertionSort() {\r\n    const animations = getinsertionSortAnimations(this.state.array);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const isColorChange =\r\n        animations[i][0] === \"comparision1\" ||\r\n        animations[i][0] === \"comparision2\";\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      if (isColorChange) {\r\n        const color =\r\n          animations[i][0] === \"comparision1\" ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        const [temp, barOneIndex, barTwoIndex] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIndex].style;\r\n        const barTwoStyle = arrayBars[barTwoIndex].style;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else {\r\n        const [temp, barIndex, newHeight] = animations[i];\r\n        const barStyle = arrayBars[barIndex].style;\r\n        setTimeout(() => {\r\n          barStyle.height = `${newHeight}px`;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      }\r\n    }\r\n  }\r\n\r\n  selectionSort() {\r\n    const animations = getselectionSortAnimations(this.state.array);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const isColorChange =\r\n        animations[i][0] === \"comparision1\" ||\r\n        animations[i][0] === \"comparision2\";\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      if (isColorChange === true) {\r\n        const color =\r\n          animations[i][0] === \"comparision1\" ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        const [temp, barOneIndex, barTwoIndex] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIndex].style;\r\n        const barTwoStyle = arrayBars[barTwoIndex].style;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else {\r\n        const [temp, barIndex, newHeight] = animations[i];\r\n        const barStyle = arrayBars[barIndex].style;\r\n        setTimeout(() => {\r\n          barStyle.height = `${newHeight}px`;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      }\r\n    }\r\n  }\r\n\r\n  heapSort() {\r\n    const animations = getHeapSortAnimations(this.state.array);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const isColorChange =\r\n        animations[i][0] === \"comparision1\" ||\r\n        animations[i][0] === \"comparision2\";\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      if (isColorChange === true) {\r\n        const color =\r\n          animations[i][0] === \"comparision1\" ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        const [temp, barOneIndex, barTwoIndex] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIndex].style;\r\n        const barTwoStyle = arrayBars[barTwoIndex].style;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else {\r\n        const [temp, barIndex, newHeight] = animations[i];\r\n        const barStyle = arrayBars[barIndex];\r\n        setTimeout(() => {\r\n          barStyle.style.height = `${newHeight}px`;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { array } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"heading\">\r\n          <h1>Sorting Visualizer</h1>\r\n        </div>\r\n        <div\r\n          className=\"nav\"\r\n          style={{ display: \"flex\", justifyContents: \"between\" }}\r\n        >\r\n          <div className=\"buttons\">\r\n            <button\r\n              title=\"Generates a new random array\"\r\n              style={{\r\n                position: \"relative\",\r\n              }}\r\n              className=\"btn-reset\"\r\n              onClick={() => this.resetArray()}\r\n            >\r\n              Generate New Array\r\n            </button>\r\n            <button\r\n              title=\"O(NlogN) Time Complexity\"\r\n              id=\"mergeSort\"\r\n              style={{\r\n                position: \"relative\",\r\n              }}\r\n              onClick={() => this.mergeSort()}\r\n            >\r\n              Merge Sort\r\n            </button>\r\n            <button\r\n              title=\"O(NlogN) Time Complexity\"\r\n              id=\"quickSort\"\r\n              style={{\r\n                position: \"relative\",\r\n              }}\r\n              onClick={() => this.quickSort()}\r\n            >\r\n              Quick Sort\r\n            </button>\r\n            <button\r\n              title=\"O(N^2) Time Complexity\"\r\n              id=\"bubbleSort\"\r\n              style={{\r\n                position: \"relative\",\r\n              }}\r\n              onClick={() => this.bubbleSort()}\r\n            >\r\n              Bubble Sort\r\n            </button>\r\n            <button\r\n              title=\"O(N^2) Time Complexity\"\r\n              id=\"insertionSort\"\r\n              style={{\r\n                position: \"relative\",\r\n              }}\r\n              onClick={() => this.insertionSort()}\r\n            >\r\n              Insertion Sort\r\n            </button>\r\n            <button\r\n              title=\"O(N^2) Time Complexity\"\r\n              id=\"selectionSort\"\r\n              style={{\r\n                position: \"relative\",\r\n              }}\r\n              onClick={() => this.selectionSort()}\r\n            >\r\n              Selection Sort\r\n            </button>\r\n            <button\r\n              title=\"O(NlogN) Time Complexity\"\r\n              id=\"heapSort\"\r\n              style={{\r\n                position: \"relative\",\r\n              }}\r\n              onClick={() => this.heapSort()}\r\n            >\r\n              Heap Sort\r\n            </button>\r\n            <div className=\"footer\">\r\n              <a href=\"https://ayushkarn.netlify.app/\">\r\n                <FontAwesomeIcon icon={faGlobe} className=\"icon\" />\r\n              </a>\r\n              <a href=\"https://www.linkedin.com/in/ayush-karn25\">\r\n                <FontAwesomeIcon icon={faLinkedin} className=\"icon\" />\r\n              </a>\r\n              <a href=\"https://www.instagram.com/ayush_diaries\">\r\n                <FontAwesomeIcon icon={faInstagram} className=\"icon\" />\r\n              </a>\r\n              <a href=\"https://www.github.com/ayush2599\">\r\n                <FontAwesomeIcon icon={faGithub} className=\"icon\" />\r\n              </a>\r\n              <br />\r\n              Ayush Karn\r\n            </div>\r\n          </div>\r\n          <div className=\"array-container\">\r\n            {array.map((value, idx) => (\r\n              <div\r\n                className=\"array-bar\"\r\n                key={idx}\r\n                style={{ backgroundColor: PRIMARY_COLOR, height: `${value}px` }}\r\n              ></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  randomIntFromInterval(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  }\r\n}\r\nexport default SortingVisualizer;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport SortingVisualizer from \"./SortingVisualizer/SortingVisualizer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}